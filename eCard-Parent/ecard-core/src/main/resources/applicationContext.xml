<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:jpa="http://www.springframework.org/schema/data/jpa"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
                            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
                            http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
                            http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">


    <context:annotation-config />
    <context:property-placeholder location="classpath:application.properties" />

    <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
<!--    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}"/>

    </bean>-->

<!--    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" >
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="manager" />
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="persistenceExceptionTranslationPostProcessor"
        class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>-->
        
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" >
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    
    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <!--<property name="dataSource" ref="dataSource" />-->
        <property name="dataSource" ref="dynamicDataSource" />
        <property name="packagesToScan" value="com.ecard.core.model" />
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <!-- Set JPA properties -->
	    <property name="jpaProperties">
	      <props>
	        <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
	      </props>
	    </property>
    </bean>
    
    <jpa:repositories base-package="com.ecard.core.dao.impl" />
    <context:component-scan  base-package="com.ecard.core.service" />
    
    <!-- ??????????? -->
    <bean id="dynamicDataSource"
        class="com.ecard.core.datasource.DynamicRoutingDataSourceResolver">
        <property name="targetDataSources">
            <map key-type="com.ecard.core.datasource.type.SchemaType">
                <entry key="MANAGER" value-ref="managerDataSource" />
                <entry key="USER" value-ref="userDataSource" />
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="userDataSource" />
    </bean>

    <!-- ??????????? -->
    <bean id="abstractDataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource"
        abstract="true">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
<!--        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />-->
    </bean>
    
    <bean id="managerDataSource" parent="abstractDataSource">
        <property name="url" value="${jdbc.main.url}" />
        <property name="username" value="${jdbc.main.username}" />
        <property name="password" value="${jdbc.main.password}" />
    </bean>

    <bean id="userDataSource" parent="abstractDataSource">
        <property name="url" value="${jdbc.second.url}" />
        <property name="username" value="${jdbc.second.username}" />
        <property name="password" value="${jdbc.second.password}" />
    </bean>
         
    <!-- Email support -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.server.host}" />
        <property name="port" value="${mail.server.port}" />
        <property name="protocol" value="${mail.server.protocol}" />
        <property name="username" value="${mail.server.username}" />
        <property name="password" value="${mail.server.password}" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
            </props>
        </property>
<!--        <property name="javaMailProperties">
            <util:properties location="classpath:email.properties" />
        </property>-->
    </bean>
    
    
     <!--THYMELEAF: Template Resolver for email templates--> 
    <bean id="emailTemplateResolver" class="org.thymeleaf.templateresolver.ClassLoaderTemplateResolver">
        <property name="prefix" value="/mail/" />
        <property name="suffix" value=".html" />
        <property name="templateMode" value="HTML5" />
        <property name="characterEncoding" value="UTF-8" />
        <property name="order" value="1" />
         <!--Template cache is true by default. Set to false if you want--> 
         <!--templates to be automatically updated when modified.-->        
        <property name="cacheable" value="true" />
    </bean>
    
<!--    <bean id="webTemplateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
        <property name="prefix" value="/WEB-INF/templates/" />
        <property name="templateMode" value="HTML5" />
        <property name="characterEncoding" value="UTF-8" />
        <property name="order" value="2" />
    </bean>-->
    
     <!--THYMELEAF: Template Engine (Spring3-specific version)--> 
    <bean id="templateEngine" class="org.thymeleaf.spring3.SpringTemplateEngine">
        <property name="templateResolvers">
          <set>
            <ref bean="emailTemplateResolver" />
            <!--<ref bean="webTemplateResolver"/>-->
                
          </set>
        </property>
    </bean>
    

<!--    <bean id="viewResolver" class="org.thymeleaf.spring3.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine" />
        <property name="characterEncoding" value="UTF-8" />
    </bean>-->
         
</beans>